{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\Trailer-Troop-main\\\\src\\\\Pages\\\\Nav4\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport { Button, createMuiTheme, TextField, ThemeProvider } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useState, useEffect } from \"react\";\nimport DisplayTrend from \"../Display/DisplayTrend\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [content, setContent] = useState([]);\n  const type = \"\";\n  const [searchText, setSearchText] = useState(\"\");\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: \"dark\",\n      primary: {\n        main: \"#fff\"\n      }\n    }\n  });\n\n  const fetchSearch = async () => {\n    const url = `https://api.themoviedb.org/3/search/multi?api_key=00b12453da487e483d5bf36391cb12b0&language=en-US&query=${searchText}&page=1&include_adult=false`;\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data);\n    setContent(data.results);\n  };\n\n  useEffect(() => {\n    fetchSearch();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: darkTheme,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        style: {\n          display: \"flex\",\n          margin: \"15px 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            flex: 1\n          },\n          className: \"searchBox\",\n          label: \"Search\",\n          variant: \"filled\",\n          onChange: e => setSearchText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: fetchSearch,\n          variant: \"contained\",\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trending\",\n      children: [content && content.map(c => /*#__PURE__*/_jsxDEV(DisplayTrend, {\n        id: c.id,\n        poster: c.poster_path,\n        title: c.title || c.name,\n        date: c.first_air_date || c.release_date,\n        media_type: type ? \"tv\" : \"movie\",\n        vote_average: c.vote_average\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)), searchText && !content && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"nudZ0odQOGF5aqFp/1HlcvCrU3E=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/ASUS/Downloads/Trailer-Troop-main/src/Pages/Nav4/Search.js"],"names":["Button","createMuiTheme","TextField","ThemeProvider","SearchIcon","useState","useEffect","DisplayTrend","Search","content","setContent","type","searchText","setSearchText","darkTheme","palette","primary","main","fetchSearch","url","response","fetch","data","json","console","log","results","display","margin","flex","e","target","value","map","c","id","poster_path","title","name","first_air_date","release_date","vote_average"],"mappings":"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","sourcesContent":["import { Button, createMuiTheme, TextField, ThemeProvider } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { useState, useEffect } from \"react\";\nimport DisplayTrend from \"../Display/DisplayTrend\";\n\nconst Search = () => {\n  const [content, setContent] = useState([]);\n  const type = \"\";\n  const [searchText, setSearchText] = useState(\"\");\n\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: \"dark\",\n      primary: {\n        main: \"#fff\",\n      },\n    },\n  });\n\n  const fetchSearch = async () => {\n    const url = `https://api.themoviedb.org/3/search/multi?api_key=00b12453da487e483d5bf36391cb12b0&language=en-US&query=${searchText}&page=1&include_adult=false`;\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(data);\n\n    setContent(data.results);\n  };\n  useEffect(() => {\n    fetchSearch();\n  });\n\n  return (\n    <div>\n      <ThemeProvider theme={darkTheme}>\n        <div className=\"search\" style={{\n          display: \"flex\",\n          margin: \"15px 0\",\n        }}>\n          <TextField\n            style={{ flex: 1 }}\n            className=\"searchBox\"\n            label=\"Search\"\n            variant=\"filled\"\n            onChange={(e) => setSearchText(e.target.value)}\n          />\n          <Button\n            onClick={fetchSearch}\n            variant=\"contained\">\n            <SearchIcon fontSize=\"large\" />\n          </Button>\n        </div>\n      </ThemeProvider>\n      <div className=\"trending\">\n        {content &&\n          content.map((c) => (\n            <DisplayTrend\n              key={c.id}\n              id={c.id}\n              poster={c.poster_path}\n              title={c.title || c.name}\n              date={c.first_air_date || c.release_date}\n              media_type={type ? \"tv\" : \"movie\"}\n              vote_average={c.vote_average}\n            />\n          ))}\n        {searchText &&\n          !content &&\n          (<h2>Not Found</h2>)}\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}