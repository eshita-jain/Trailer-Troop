{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Downloads\\\\Trailer-Troop-main\\\\src\\\\Pages\\\\Genre.js\",\n    _s = $RefreshSig$();\n\nimport { Chip } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Genre = ({\n  type,\n  selectGenres,\n  setSelectGenres,\n  genres,\n  setGenres\n}) => {\n  _s();\n\n  const Add = genre => {\n    setSelectGenres([...selectGenres, genre]);\n    setGenres(genres.filter(g => g.id !== genre.id));\n  };\n\n  const Remove = genre => {\n    setSelectGenres(selectGenres.filter(selected => selected.id !== genre.id));\n    setGenres([...genres, genre]);\n  };\n\n  const fetchGenre = async () => {\n    const url = `https://api.themoviedb.org/3/genre/${type}/list?api_key=00b12453da487e483d5bf36391cb12b0&language=en-US`;\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(genres);\n    setGenres(data.genres);\n  };\n\n  useEffect(() => {\n    fetchGenre();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"10px 5px\"\n    },\n    children: [selectGenres.map(genre => /*#__PURE__*/_jsxDEV(Chip, {\n      style: {\n        margin: 2\n      },\n      label: genre.name,\n      color: \"primary\",\n      clickable: true,\n      size: \"small\",\n      onDelete: () => Remove(genre)\n    }, genre.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)), genres.map(genre => /*#__PURE__*/_jsxDEV(Chip, {\n      style: {\n        margin: 2\n      },\n      label: genre.name,\n      clickable: true,\n      size: \"small\",\n      onClick: () => Add(genre)\n    }, genre.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Genre, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Genre;\nexport default Genre;\n\nvar _c;\n\n$RefreshReg$(_c, \"Genre\");","map":{"version":3,"sources":["C:/Users/ASUS/Downloads/Trailer-Troop-main/src/Pages/Genre.js"],"names":["Chip","useEffect","Genre","type","selectGenres","setSelectGenres","genres","setGenres","Add","genre","filter","g","id","Remove","selected","fetchGenre","url","response","fetch","data","json","console","log","padding","map","margin","name"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,mBAArB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA,eAAtB;AAAuCC,EAAAA,MAAvC;AAA+CC,EAAAA;AAA/C,CAAD,KAAgE;AAAA;;AAC5E,QAAMC,GAAG,GAAIC,KAAD,IAAW;AACrBJ,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBK,KAAlB,CAAD,CAAf;AACAF,IAAAA,SAAS,CAACD,MAAM,CAACI,MAAP,CAAeC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASH,KAAK,CAACG,EAApC,CAAD,CAAT;AACD,GAHD;;AAIA,QAAMC,MAAM,GAAIJ,KAAD,IAAW;AACxBJ,IAAAA,eAAe,CACbD,YAAY,CAACM,MAAb,CAAqBI,QAAD,IAAcA,QAAQ,CAACF,EAAT,KAAgBH,KAAK,CAACG,EAAxD,CADa,CAAf;AAGAL,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYG,KAAZ,CAAD,CAAT;AACD,GALD;;AAOA,QAAMM,UAAU,GAAG,YAAY;AAC7B,UAAMC,GAAG,GAAI,sCAAqCb,IAAK,+DAAvD;AACA,UAAMc,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,MAAZ;AACAC,IAAAA,SAAS,CAACY,IAAI,CAACb,MAAN,CAAT;AACD,GAND;;AAQAL,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,UAAU;AACX,GAFQ,CAAT;AAGA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEQ,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA,eACGnB,YAAY,CAACoB,GAAb,CAAkBf,KAAD,iBAChB,QAAC,IAAD;AACE,MAAA,KAAK,EAAE;AAAEgB,QAAAA,MAAM,EAAE;AAAV,OADT;AAEE,MAAA,KAAK,EAAEhB,KAAK,CAACiB,IAFf;AAIE,MAAA,KAAK,EAAC,SAJR;AAKE,MAAA,SAAS,MALX;AAME,MAAA,IAAI,EAAC,OANP;AAOE,MAAA,QAAQ,EAAE,MAAMb,MAAM,CAACJ,KAAD;AAPxB,OAGOA,KAAK,CAACG,EAHb;AAAA;AAAA;AAAA;AAAA,YADD,CADH,EAYGN,MAAM,CAACkB,GAAP,CAAYf,KAAD,iBACV,QAAC,IAAD;AACE,MAAA,KAAK,EAAE;AAAEgB,QAAAA,MAAM,EAAE;AAAV,OADT;AAEE,MAAA,KAAK,EAAEhB,KAAK,CAACiB,IAFf;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,IAAI,EAAC,OALP;AAME,MAAA,OAAO,EAAE,MAAMlB,GAAG,CAACC,KAAD;AANpB,OAGOA,KAAK,CAACG,EAHb;AAAA;AAAA;AAAA;AAAA,YADD,CAZH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAhDD;;GAAMV,K;;KAAAA,K;AAkDN,eAAeA,KAAf","sourcesContent":["import { Chip } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\n\nconst Genre = ({ type, selectGenres, setSelectGenres, genres, setGenres }) => {\n  const Add = (genre) => {\n    setSelectGenres([...selectGenres, genre]);\n    setGenres(genres.filter((g) => g.id !== genre.id));\n  };\n  const Remove = (genre) => {\n    setSelectGenres(\n      selectGenres.filter((selected) => selected.id !== genre.id)\n    );\n    setGenres([...genres, genre]);\n  };\n\n  const fetchGenre = async () => {\n    const url = `https://api.themoviedb.org/3/genre/${type}/list?api_key=00b12453da487e483d5bf36391cb12b0&language=en-US`;\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log(genres);\n    setGenres(data.genres);\n  };\n\n  useEffect(() => {\n    fetchGenre();\n  });\n  return (\n    <div style={{ padding: \"10px 5px\" }}>\n      {selectGenres.map((genre) => (\n        <Chip\n          style={{ margin: 2 }}\n          label={genre.name}\n          key={genre.id}\n          color=\"primary\"\n          clickable\n          size=\"small\"\n          onDelete={() => Remove(genre)}\n        />\n      ))}\n      {genres.map((genre) => (\n        <Chip\n          style={{ margin: 2 }}\n          label={genre.name}\n          key={genre.id}\n          clickable\n          size=\"small\"\n          onClick={() => Add(genre)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Genre;\n"]},"metadata":{},"sourceType":"module"}